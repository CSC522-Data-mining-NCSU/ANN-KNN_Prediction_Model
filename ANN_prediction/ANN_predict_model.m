function [Y,Xf,Af] = ANN_predict_model(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 24-Nov-2015 20:05:45.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx4 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx5 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1915;1;1.373];
x1_step1_gain = [0.5;0.0222222222222222;0.002002002002002;0.597014925373134];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.239835163846098709;-2.6565221150695403907;1.7612195582623690893;-1.5535438388661573228;-1.2495108580701121959;0.27430566852746657291;1.3316776070933999954;0.6438682728995515081;-0.77877308727123673027;-0.20396780238034184496;-1.8122072386034577818;1.4999205603690961564;1.2859653182613413058;2.6129523484277896728;2.6912697897192918717];
IW1_1 = [1.2612410187985116927 -0.84985498660189051634 -0.45978008471267139967 -1.9301826485653410526;1.6113982502993151602 -1.2149521938504537211 -0.11208338536956434506 1.595687511760227606;-2.2321754610574093824 0.15989587312544334408 -0.032132246769920082274 -1.63949587701075572;1.2450226133503723425 1.5630614006288758855 1.6526822522897099965 0.22302899420257255025;1.2974477583394046221 1.2413488429693031456 1.3141211248044546434 -0.69543405151276727061;-1.7781879146975241301 0.12759467689562181691 -0.066577212236373708998 -1.5514731988448282607;-1.6585609095980251571 -0.013992509820078692651 -0.022676756852489626803 -0.30990302998900309817;1.8631894167554787778 1.8527500702954349254 -0.52377584895897111306 0.68209602903300625698;0.31551106114406846093 -2.1795636110193754575 1.3434500269671942885 0.35463032995531751368;1.1333319329031030787 -2.4317807118273786493 0.31745042768645864717 -0.99860310022690634835;-1.8386310611002127935 -1.2106892723800166678 1.1710891685342987856 -0.059862798944061546003;-0.19876556955127422377 0.92047064178279747182 -0.90100739647640504248 -2.1645895541142761154;1.7465610417326529191 0.11224261735737781076 -0.12877337044561731894 -2.6285251614479565596;0.57506546720033024922 1.7974659267904937732 0.84410884280049225392 -1.6170519402763718908;1.9933488772663761068 -0.32025307743847580833 -0.42192365446661095341 -1.7014375405230492966];

% Layer 2
b2 = [-0.50653027198706535028;-0.85245888589681262371;-0.5007489567251508511;-0.92187390772875121847;0.48498426377682513078];
LW2_1 = [0.081365306207324156196 0.68185011364127334765 -0.076821337131086797623 -0.95599702945174203084 1.027753841706490201 1.3709312022985706836 0.96101294084535404671 -0.55717986600770474936 -0.48975245154926683178 0.38754913816439851004 -0.1755019269681311056 0.73566362720330258362 0.17837158408226366779 0.28199495358987797244 -0.63302264122151541414;-0.48945986676256519887 0.45332650701901838763 0.69536671736008937028 -0.25462270280102244913 0.12599511565604024077 0.58391405709091181997 0.97407741527243829616 -0.32834542857744941635 0.022292703184834318508 0.11417717358739892797 0.57742673855900006341 0.12646162693448184666 0.87306043676998479341 -0.03085025883722118667 -0.089484107341386592838;0.74245860347166980908 -0.62647864683239729011 0.82555439435671251758 -0.30509171058241002505 0.070450200464017773139 -0.58923911604362166905 1.1398880450772672646 -0.11444933372120448534 0.32070400656839731512 0.029829665887390888201 0.25129184125783682324 -0.009349558861730446549 0.9729386330216899248 -0.4849863196495837192 0.26527308515213132711;-0.010329258301565957118 -0.21771216239502638734 0.59901155263532668283 -0.067605999191013357863 -0.30587216965105501476 -1.5152638966580529445 -0.053722719784092418105 -0.27874321192679812897 -0.038676770837835910966 -0.22066952254229235675 -0.22582729772415363612 -0.44235227197147236611 0.63202546527894543082 -0.66165146099336435981 0.77895788497744034018;-0.44674764212979273248 -0.67404508964145715133 -0.72936254752569729121 -0.33353503382070243122 -0.066860000400418465039 -0.9417771037363673603 -1.6648256580334550581 0.17387803886418801147 -0.15918443901435924692 0.17812714553393740879 0.42739139195907110969 -0.082891365906595751434 -0.27822182702751335759 0.11468665089171269089 -0.26641932420259883951];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
